#!/bin/bash

# Script para alternar entre ambientes de desenvolvimento e produ√ß√£o
set -e

ENV=${1:-dev}

echo "üîÑ ALTERANDO PARA AMBIENTE: $ENV"
echo "============================================================"

case $ENV in
    "dev"|"development")
        echo "üñ•Ô∏è  Configurando ambiente de DESENVOLVIMENTO..."
        
        # Parar ambiente de produ√ß√£o se estiver rodando
        if docker-compose -f ../docker-compose.prod.yml ps | grep -q "Up"; then
            echo "üõë Parando ambiente de produ√ß√£o..."
            docker-compose -f ../docker-compose.prod.yml down
        fi
        
        # Iniciar ambiente de desenvolvimento
        echo "üöÄ Iniciando ambiente de desenvolvimento..."
        cd ..
        docker-compose up -d
        
        echo "‚úÖ Ambiente de DESENVOLVIMENTO ativo!"
        echo ""
        echo "üìã URLs:"
        echo "  üåê Frontend: http://localhost:5173"
        echo "  üîß Backend: http://localhost:8000"
        echo "  üìö API Docs: http://localhost:8000/docs"
        echo ""
        echo "üîë Credenciais: admin/admin123, waiter/waiter123"
        echo ""
        echo "üìù Para trabalhar:"
        echo "  cd backend && poetry run dev"
        echo "  cd frontend && npm run dev"
        ;;
        
    "prod"|"production")
        echo "üöÄ Configurando ambiente de PRODU√á√ÉO..."
        
        # Verificar se arquivo de ambiente existe
        if [ ! -f "../env.prod" ]; then
            echo "‚ùå Arquivo env.prod n√£o encontrado!"
            echo "üí° Execute: cp env.prod env.prod e configure as vari√°veis"
            exit 1
        fi
        
        # Parar ambiente de desenvolvimento se estiver rodando
        if docker-compose ps | grep -q "Up"; then
            echo "üõë Parando ambiente de desenvolvimento..."
            docker-compose down
        fi
        
        # Executar deploy de produ√ß√£o
        echo "üöÄ Executando deploy de produ√ß√£o..."
        cd ..
        ./scripts/deploy-prod.sh
        
        echo "‚úÖ Ambiente de PRODU√á√ÉO ativo!"
        echo ""
        echo "üìã URLs:"
        echo "  üåê Frontend: http://localhost"
        echo "  üîß Backend: http://localhost:8000"
        echo "  üìö API Docs: http://localhost:8000/docs"
        ;;
        
    "status")
        echo "üìä STATUS DOS AMBIENTES:"
        echo "============================================================"
        
        echo "üñ•Ô∏è  DESENVOLVIMENTO:"
        if docker-compose ps | grep -q "Up"; then
            echo "  ‚úÖ ATIVO"
            docker-compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
        else
            echo "  ‚ùå INATIVO"
        fi
        
        echo ""
        echo "üöÄ PRODU√á√ÉO:"
        if docker-compose -f ../docker-compose.prod.yml ps | grep -q "Up"; then
            echo "  ‚úÖ ATIVO"
            docker-compose -f ../docker-compose.prod.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
        else
            echo "  ‚ùå INATIVO"
        fi
        ;;
        
    "clean")
        echo "üßπ LIMPANDO TODOS OS AMBIENTES..."
        
        # Parar todos os servi√ßos
        echo "üõë Parando servi√ßos..."
        docker-compose down 2>/dev/null || true
        docker-compose -f ../docker-compose.prod.yml down 2>/dev/null || true
        
        # Limpar containers, imagens e volumes n√£o utilizados
        echo "üßπ Limpando recursos Docker..."
        docker system prune -f
        docker volume prune -f
        
        echo "‚úÖ Limpeza conclu√≠da!"
        ;;
        
    *)
        echo "‚ùå Uso incorreto!"
        echo ""
        echo "üìñ USO:"
        echo "  ./switch-env.sh [ambiente]"
        echo ""
        echo "üåç AMBIENTES DISPON√çVEIS:"
        echo "  dev, development  - Ambiente de desenvolvimento"
        echo "  prod, production  - Ambiente de produ√ß√£o"
        echo "  status            - Ver status dos ambientes"
        echo "  clean             - Limpar todos os ambientes"
        echo ""
        echo "üí° EXEMPLOS:"
        echo "  ./switch-env.sh dev      # Ativar desenvolvimento"
        echo "  ./switch-env.sh prod     # Ativar produ√ß√£o"
        echo "  ./switch-env.sh status   # Ver status"
        echo "  ./switch-env.sh clean    # Limpar tudo"
        exit 1
        ;;
esac

echo ""
echo "============================================================"
