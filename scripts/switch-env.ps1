# Script PowerShell para alternar entre ambientes de desenvolvimento e produ√ß√£o
param(
    [Parameter(Position=0)]
    [string]$Environment = "dev"
)

Write-Host "üîÑ ALTERANDO PARA AMBIENTE: $Environment" -ForegroundColor Green
Write-Host "============================================================" -ForegroundColor Cyan

switch ($Environment.ToLower()) {
    { $_ -in @("dev", "development") } {
        Write-Host "üñ•Ô∏è  Configurando ambiente de DESENVOLVIMENTO..." -ForegroundColor Yellow
        
        # Parar ambiente de produ√ß√£o se estiver rodando
        try {
            $prodStatus = docker-compose -f ../docker-compose.prod.yml ps 2>$null
            if ($prodStatus -match "Up") {
                Write-Host "üõë Parando ambiente de produ√ß√£o..." -ForegroundColor Yellow
                docker-compose -f ../docker-compose.prod.yml down
            }
        } catch {
            # Ambiente de produ√ß√£o n√£o est√° rodando
        }
        
        # Iniciar ambiente de desenvolvimento
        Write-Host "üöÄ Iniciando ambiente de desenvolvimento..." -ForegroundColor Yellow
        Set-Location ..
        docker-compose up -d
        
        Write-Host "‚úÖ Ambiente de DESENVOLVIMENTO ativo!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã URLs:" -ForegroundColor Yellow
        Write-Host "  üåê Frontend: http://localhost:5173" -ForegroundColor White
        Write-Host "  üîß Backend: http://localhost:8000" -ForegroundColor White
        Write-Host "  üìö API Docs: http://localhost:8000/docs" -ForegroundColor White
        Write-Host ""
        Write-Host "üîë Credenciais: admin/admin123, waiter/waiter123" -ForegroundColor White
        Write-Host ""
        Write-Host "üìù Para trabalhar:" -ForegroundColor Yellow
        Write-Host "  cd backend; poetry run dev" -ForegroundColor White
        Write-Host "  cd frontend; npm run dev" -ForegroundColor White
        break
    }
    
    { $_ -in @("prod", "production") } {
        Write-Host "üöÄ Configurando ambiente de PRODU√á√ÉO..." -ForegroundColor Yellow
        
        # Verificar se arquivo de ambiente existe
        if (-not (Test-Path "../env.prod")) {
            Write-Host "‚ùå Arquivo env.prod n√£o encontrado!" -ForegroundColor Red
            Write-Host "üí° Execute: cp env.prod env.prod e configure as vari√°veis" -ForegroundColor Yellow
            exit 1
        }
        
        # Parar ambiente de desenvolvimento se estiver rodando
        try {
            $devStatus = docker-compose ps 2>$null
            if ($devStatus -match "Up") {
                Write-Host "üõë Parando ambiente de desenvolvimento..." -ForegroundColor Yellow
                docker-compose down
            }
        } catch {
            # Ambiente de desenvolvimento n√£o est√° rodando
        }
        
        # Executar deploy de produ√ß√£o
        Write-Host "üöÄ Executando deploy de produ√ß√£o..." -ForegroundColor Yellow
        Set-Location ..
        .\scripts\deploy-prod.ps1
        
        Write-Host "‚úÖ Ambiente de PRODU√á√ÉO ativo!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã URLs:" -ForegroundColor Yellow
        Write-Host "  üåê Frontend: http://localhost" -ForegroundColor White
        Write-Host "  üîß Backend: http://localhost:8000" -ForegroundColor White
        Write-Host "  üìö API Docs: http://localhost:8000/docs" -ForegroundColor White
        break
    }
    
    "status" {
        Write-Host "üìä STATUS DOS AMBIENTES:" -ForegroundColor Yellow
        Write-Host "============================================================" -ForegroundColor Cyan
        
        Write-Host "üñ•Ô∏è  DESENVOLVIMENTO:" -ForegroundColor Yellow
        try {
            $devStatus = docker-compose ps 2>$null
            if ($devStatus -match "Up") {
                Write-Host "  ‚úÖ ATIVO" -ForegroundColor Green
                docker-compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
            } else {
                Write-Host "  ‚ùå INATIVO" -ForegroundColor Red
            }
        } catch {
            Write-Host "  ‚ùå INATIVO" -ForegroundColor Red
        }
        
        Write-Host ""
        Write-Host "üöÄ PRODU√á√ÉO:" -ForegroundColor Yellow
        try {
            $prodStatus = docker-compose -f ../docker-compose.prod.yml ps 2>$null
            if ($prodStatus -match "Up") {
                Write-Host "  ‚úÖ ATIVO" -ForegroundColor Green
                docker-compose -f ../docker-compose.prod.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
            } else {
                Write-Host "  ‚ùå INATIVO" -ForegroundColor Red
            }
        } catch {
            Write-Host "  ‚ùå INATIVO" -ForegroundColor Red
        }
        break
    }
    
    "clean" {
        Write-Host "üßπ LIMPANDO TODOS OS AMBIENTES..." -ForegroundColor Yellow
        
        # Parar todos os servi√ßos
        Write-Host "üõë Parando servi√ßos..." -ForegroundColor Yellow
        try { docker-compose down } catch { }
        try { docker-compose -f ../docker-compose.prod.yml down } catch { }
        
        # Limpar containers, imagens e volumes n√£o utilizados
        Write-Host "üßπ Limpando recursos Docker..." -ForegroundColor Yellow
        docker system prune -f
        docker volume prune -f
        
        Write-Host "‚úÖ Limpeza conclu√≠da!" -ForegroundColor Green
        break
    }
    
    default {
        Write-Host "‚ùå Uso incorreto!" -ForegroundColor Red
        Write-Host ""
        Write-Host "üìñ USO:" -ForegroundColor Yellow
        Write-Host "  .\switch-env.ps1 [ambiente]" -ForegroundColor White
        Write-Host ""
        Write-Host "üåç AMBIENTES DISPON√çVEIS:" -ForegroundColor Yellow
        Write-Host "  dev, development  - Ambiente de desenvolvimento" -ForegroundColor White
        Write-Host "  prod, production  - Ambiente de produ√ß√£o" -ForegroundColor White
        Write-Host "  status            - Ver status dos ambientes" -ForegroundColor White
        Write-Host "  clean             - Limpar todos os ambientes" -ForegroundColor White
        Write-Host ""
        Write-Host "üí° EXEMPLOS:" -ForegroundColor Yellow
        Write-Host "  .\switch-env.ps1 dev      # Ativar desenvolvimento" -ForegroundColor White
        Write-Host "  .\switch-env.ps1 prod     # Ativar produ√ß√£o" -ForegroundColor White
        Write-Host "  .\switch-env.ps1 status   # Ver status" -ForegroundColor White
        Write-Host "  .\switch-env.ps1 clean    # Limpar tudo" -ForegroundColor White
        exit 1
    }
}

Write-Host ""
Write-Host "============================================================" -ForegroundColor Cyan
